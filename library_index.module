<?php

/**
 * Read data from kirjastot.fi api and show library's open hours.
 */
include 'LibraryIndexApi.php';

/**
 * Implemtents hook_menu().
 */
function library_index_menu() {
  $items = array();
  $items['admin/config/system/library-index'] = array(
      'title' => 'Library index',
      'description' => 'Settings for library data request from kirjastot.fi api.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('library_index_admin'),
      'access arguments' => array('administer library index'),
      'file' => 'library_index.admin.inc',
  );
  $items['admin/config/system/library-index/list'] = array(
      'title' => 'Library Id list',
      'description' => 'Library list from kirjastot.fi api.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('library_index_list'),
      'access arguments' => array('administer library index'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'library_index.admin.inc',
  );
  $items['admin/config/system/library-index/general'] = array(
      'title' => 'General settings',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -10,
  );
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function library_index_permission() {
  return array(
      'administer library index' => array(
          'title' => t('Administer library Index', array(), array('context' => 'library_index')),
      ),
  );
}

/**
 * Read data from kirjastot.fi api.
 * @param type $lid
 * @return type
 */
function library_index_read() {
  $result = '';
//    $api = variable_get('library_index_api', '');
//    $ldata = new LibraryIndexApi($api);
  return $result;
}

/**
 * Get library's open hours from kirjastot.fi library directory.
 * @param type $lid library id
 * @param type $start_date start day of result
 * @return type open hours result object
 */
function library_index_get_open_hours($lid, $start_date = NULL) {
  $result = '';
  if (isset($lid)) {
//    $start_date = get_date('2014-10-20');
    $api = variable_get('library_index_api', '');
    $ldata = new LibraryIndexApi($api);
    $result = $ldata->getOpenHours($lid, $start_date);
    if ($result === NULL) {
      // We have some kind of error!
    } else {
      if (count($result) == 1) {
        $result = $result[0];
      }
    }
  }
  return $result;
}

/**
 * Helper function
 */
function get_date($date) {
  $firstDate = strtotime($date);
  $firstDate += date('Z');
  return $firstDate;
}

function library_index_get_list($consortium) {
  $api = variable_get('library_index_api', '');
  $ldata = new LibraryIndexApi($api);
  $result = $ldata->getLibraryList($consortium);
  return $result;
}
